name: 8bit Site Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy-production:
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Build Docker Image
        run: |
          docker build --build-arg PROJECT_SECRET="${{ secrets.PROJECT_SECRET }}" -t 8bit-site .

      - name: Save Docker Image
        run: |
          docker save 8bit-site:latest -o 8bit-site.tar
      
      - name: Copy Docker Image to Server
        env:
          SSH_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.PROD_SSH_USER }}
          SERVER_HOST: ${{ secrets.PROD_SSH_HOST }}
        run: |
          echo "$SSH_KEY" > ssh_key
          chmod 700 ssh_key
          scp -i ssh_key -o StrictHostKeyChecking=no 8bit-site.tar $SERVER_USER@$SERVER_HOST:~/
          rm -r ./*

      - name: SSH into instance and run commands
        env:
          SSH_HOST: ${{ secrets.PROD_SSH_HOST }}
          SSH_USER: ${{ secrets.PROD_SSH_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            sudo docker stop 8bit-site-container || true && \
            sudo docker rm 8bit-site-container || true && \
            sudo docker load -i ~/8bit-site.tar && \
            sudo docker run -d -p 8010:8000 --name 8bit-site-container \
            -e PROJECT_SECRET="${{ secrets.PROJECT_SECRET }}" \
            -e DATABASE_HOST="${{ secrets.DATABASE_HOST }}" \
            -e DATABASE_USER="${{ secrets.DATABASE_USER }}" \
            -e DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}" \
            8bit-site && \
            sudo docker builder prune --force && \
            sudo docker image prune --force && \
            echo "Deployment complete"
          EOF
